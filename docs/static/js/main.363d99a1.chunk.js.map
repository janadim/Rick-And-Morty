{"version":3,"sources":["services/api.js","components/FilterByName.js","components/CharacterCard.js","components/CharacterList.js","services/local-storage.js","components/CharacterDetail.js","images/Rickandmorty.png","components/App.js","index.js"],"names":["getApiData","fetch","then","response","json","data","results","map","character","name","id","image","species","status","origin","episodes","episode","length","FilterByName","props","onSubmit","ev","preventDefault","className","htmlFor","type","value","filterName","onChange","handleFilter","CharacterCard","to","eachChar","src","alt","title","CharacterList","charElement","chars","objExportLS","get","key","defaultData","localStorage","getItem","JSON","parse","set","setItem","stringify","CharacterDetail","char","App","charsLocalStorageData","ls","useState","setChars","setFilterName","useEffect","charsData","filteredChars","filter","toLowerCase","includes","Rickandmorty","exact","path","target","render","routeCharId","match","params","foundChar","find","element","Number","undefined","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.363d99a1.chunk.js","sourcesContent":["const getApiData = () => {\r\n  return fetch(\"https://rickandmortyapi.com/api/character/?results=20\")\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      const cleanData = data.results.map((character) => {\r\n        return {\r\n          name: character.name,\r\n          id: character.id,\r\n          image: character.image,\r\n          species: character.species,\r\n          status: character.status,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n\r\n      return cleanData;\r\n    });\r\n};\r\n\r\nexport default getApiData;\r\n","const FilterByName = (props) => {\r\n  const handleForm = (ev) => {\r\n    ev.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleForm} className=\"form \">\r\n      <label className=\"nameLabel chng\" htmlFor=\"name\">\r\n        Search:\r\n      </label>\r\n      <input\r\n        type=\"text\"\r\n        value={props.filterName}\r\n        name=\"name\"\r\n        id=\"name\"\r\n        onChange={props.handleFilter}\r\n        className=\"inputForm\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FilterByName;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link to={`/character/${props.eachChar.id}`}>\r\n      \r\n        \r\n      <div className=\"card\">\r\n        <img\r\n          src={props.eachChar.image}\r\n          alt={props.eachChar.name}\r\n          title={props.eachChar.name}\r\n          className=\"li-img\"\r\n        />\r\n        <h4 className=\"charName\">{props.eachChar.name}</h4>\r\n        <p className=\"charSpec\">{props.eachChar.species}</p>\r\n      </div>\r\n        \r\n      \r\n    </Link>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n","import CharacterCard from \"./CharacterCard\";\r\n\r\nconst CharacterList = (props) => {\r\n  let charElement = (\r\n    <p>Sorry, but there are no coincidences with your search</p>\r\n  );\r\n  if (props.chars.length !== 0) {\r\n    charElement = props.chars.map((eachChar) => {\r\n      return (\r\n        <li key={eachChar.id} className=\"charItem change\">\r\n          <CharacterCard eachChar={eachChar} />\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <section>\r\n      <ul className=\"charList\">{charElement}</ul>\r\n    </section>\r\n  );\r\n};\r\nexport default CharacterList;\r\n","const get = (key, defaultData) => {\r\n  const data = localStorage.getItem(key);\r\n  if (data === null) {\r\n    return defaultData;\r\n  } else {\r\n    return JSON.parse(data);\r\n  }\r\n};\r\n\r\nconst set = (key, value) => {\r\n  localStorage.setItem(key, JSON.stringify(value));\r\n};\r\n\r\nconst objExportLS = {\r\n  get: get,\r\n  set: set,\r\n};\r\nexport default objExportLS;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <>\r\n      <Link to=\"/\" className=\"back\">\r\n          <p className=\"back-link\">Go back</p>\r\n      </Link>\r\n      <article className=\"details-container\">\r\n        <img src={props.char.image} alt=\"\" className=\"img-details\" />\r\n        <ul className=\"descriptionText\">\r\n          <h2 className=\"text-name\">{props.char.name}</h2>\r\n          <li>\r\n            - Status: <span className=\"text-status\">{props.char.status}</span>\r\n          </li>\r\n          <li>\r\n            - Species: <span className=\"text-spec\">{props.char.species}</span>\r\n          </li>\r\n          <li>\r\n            - Origin: <span className=\"text-origin\">{props.char.origin}</span>\r\n          </li>\r\n          <li>\r\n            - Episodes:\r\n            <span className=\"text-episodes\">{props.char.episodes}</span>\r\n          </li>\r\n        </ul>\r\n\r\n        \r\n      </article>\r\n    </>\r\n  )\r\n};\r\nexport default CharacterDetail;\r\n","export default __webpack_public_path__ + \"static/media/Rickandmorty.de13d484.png\";","import stylesheets from \"../stylesheets/App.scss\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport getApiData from \"../services/api.js\";\r\nimport FilterByName from \"./FilterByName\";\r\nimport CharacterList from \"./CharacterList\";\r\nimport ls from \"../services/local-storage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CharacterDetail from \"./CharacterDetail\";\r\nimport Rickandmorty from \"../images/Rickandmorty.png\";\r\n\r\n\r\nfunction App() {\r\n  const charsLocalStorageData = ls.get(\"chars\", []);\r\n  const [chars, setChars] = useState(charsLocalStorageData);\r\n  const [filterName, setFilterName] = useState(ls.get(\"filterName\", \"\"));\r\n\r\n  //useStates\r\n\r\n  useEffect(() => {\r\n    if (chars.length === 0) {\r\n      getApiData().then((charsData) => {\r\n        setChars(charsData);\r\n      });\r\n    }\r\n  },[]);\r\n\r\n  useEffect(() => {\r\n    ls.set(\"chars\", chars);\r\n  }, [chars]);\r\n\r\n  //handlers\r\n\r\n  const handleFilter = (ev) => {\r\n    setFilterName(ev.target.value);\r\n  };\r\n\r\n  //render\r\n  const filteredChars = chars.filter((char) => {\r\n    return char.name.toLowerCase().includes(filterName.toLowerCase());\r\n  });\r\n\r\n  const renderCharDetail = (props) => {\r\n    const routeCharId = props.match.params.id;\r\n    let foundChar = chars.find((element) => element.id === Number(routeCharId));\r\n    if (foundChar !== undefined) {\r\n      return <CharacterDetail char={foundChar} />;\r\n    } else {\r\n      return <p>Sorry, but this character doesn't exist</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"main-container\">\r\n      \r\n      <img className=\"main-img\" src={Rickandmorty}></img>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <div className=\"list-container\">\r\n            \r\n            <FilterByName handleFilter={handleFilter} filterName={filterName} />\r\n            <CharacterList chars={filteredChars} filterName={filterName} />\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/character/:id\" render={renderCharDetail} />\r\n      </Switch>\r\n    </section>\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}